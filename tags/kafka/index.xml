<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kafka on codecrumbs</title><link>https://www.codecrumbs.dev/tags/kafka/</link><description>Recent content in kafka on codecrumbs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 08 May 2021 17:22:00 +0000</lastBuildDate><atom:link href="https://www.codecrumbs.dev/tags/kafka/index.xml" rel="self" type="application/rss+xml"/><item><title>integration testing bdd-style</title><link>https://www.codecrumbs.dev/posts/cucumber-integration-tests/</link><pubDate>Sat, 08 May 2021 17:22:00 +0000</pubDate><guid>https://www.codecrumbs.dev/posts/cucumber-integration-tests/</guid><description>introduction I&amp;rsquo;ve written a few integration test frameworks where the tests were written as JUnit @Test methods and defined via a fluent API that hid the plumbing from the test author. These were always executed against a mixture of locally installed &amp;amp; in-memory infrastructure.
This worked well-enough in small development teams where the developers wrote the tests but wasn&amp;rsquo;t so good when I considered it for a larger project with a bigger team.</description></item></channel></rss>